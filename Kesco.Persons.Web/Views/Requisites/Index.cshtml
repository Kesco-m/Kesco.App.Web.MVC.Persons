@inherits Kesco.Persons.Web.SiteViewPage<Kesco.Persons.Web.Models.Requisites.ViewModel>
@using Kesco.Web.Mvc
@using Kesco.Web.Mvc.UI
@using Kesco.Persons.Web
@using Kesco.Persons.Web.Localization
@{
	Model
		.GetScriptCapabilities()
		.DisableGridScript()
		.DisableTreeScript();
	ViewBag.Title = Model.PageTitle;
	Layout = "~/Views/Shared/_Layout.cshtml";
	string territoryName = System.Globalization.CultureInfo.CurrentUICulture.TwoLetterISOLanguageName.ToLower() == "ru"?"Name":"Caption";
    /* Ищем в URL параметр hideOldVer, пишем его в сессию. Требуется для скрытия кнопки "Открыть в старой версии"  */
    string hideOldVerRequest = HttpContext.Current.Request["hideOldVer"];
    var hideOldVerSession = HttpContext.Current.Session["hideOldVer"];
    string hideOldVer = "false";

    if (!String.IsNullOrEmpty(hideOldVerRequest))
    {
        HttpContext.Current.Session["hideOldVer"] = hideOldVer = hideOldVerRequest;
    }
    else if (hideOldVerSession != null)
    {
        hideOldVer = hideOldVerSession.ToString();
    }
}
<style>
	table.formTable td { padding: 4px; }
</style>

<div id="formContainer" style="overflow: auto;" class="ui-widget">
	@{ Html.EnableClientValidation(); }

	@using (Html.BeginForm("Save", "Requisites", FormMethod.Post, new { id = "editForm", name = "editForm", onsubmit = "return false;" })) {
		@Html.ValidationSummary(true)
		<table class="formTable" cellspacing="0" cellpadding="2" border="0" width="99%">
		<tr>
			<td colspan="2" align="right" style="border-bottom: 1px solid;">
				<table>
					<tr>
						<td>@(global::Resources.Resources.Kesco_Persons_Web_VW_133) </td>
						<td align="right">@Html.LabelFor(m => m.Model.From)</td>
						<td width="80">@Html.EditorFor(m => m.Model.From)</td>
						<td align="right">@Html.LabelFor(m => m.Model.To)</td>
						<td width="80">@Html.EditorFor(m => m.Model.To)</td>
					</tr>
				</table>
			</td>
		</tr>

		<tr data-bind="visible: TerritoryIsRussia">
			<td style="width: 280px;">
				@Html.LabelFor(m => m.Model.IncorporationFormID):
			</td>
			<td>
				@Html.EditorFor(m => m.Model.IncorporationFormID)
				@Html.ValidationMessageFor(m => m.Model.IncorporationFormID)
			</td>
		</tr>

		<tr>
			<td>
				@(Html.LabelFor(m => m.Model.ShortNameRus)) <small>(<span data-bind="html: Territory.@(territoryName)"></span>)</small>:
			</td>
			<td >
				@Html.EditorFor(m => m.Model.ShortNameRus)
				@Html.ValidationMessageFor(m => m.Model.ShortNameRus)
			</td>
		</tr>

		<tr>
			<td>
				@Html.LabelFor(m => m.Model.ShortNameLat):
			</td>
			<td>
				@Html.EditorFor(m => m.Model.ShortNameLat, new { Databinding = "latinOnly: true" }) 
				@Html.ValidationMessageFor(m => m.Model.ShortNameLat)
			</td>
		</tr>

		<tr data-bind="visible: TerritoryIsRussia">
			<td valign="top"><br />
				@Html.LabelFor(m => m.Model.FullName) <small>(<span data-bind="html: Territory.@(territoryName)"></span>)</small>:
			</td>
			<td>
				@Html.EditorFor(m => m.Model.FullName) 
				@Html.ValidationMessageFor(m => m.Model.FullName)
			</td>
		</tr>
		<tr data-bind="visible: TerritoryIsRussia">
			<td>
				@Html.LabelFor(m => m.Model.OKONH):
			</td>
			<td>
				@Html.EditorFor(m => m.Model.OKONH, new { width = "50", maskOptions = "mask: '99999'" }) 
				@Html.ValidationMessageFor(m => m.Model.OKONH)
			</td>
		</tr>
		<tr data-bind="visible: TerritoryIsRussia">
			<td>
				@Html.LabelFor(m => m.Model.OKVED):
			</td>
			<td>
				@Html.EditorFor(m => m.Model.OKVED, new { width = "80" }) 
				@Html.ValidationMessageFor(m => m.Model.OKVED)
			</td>
		</tr>
		<tr data-bind="visible: TerritoryIsRussia">
			<td>
				@Html.LabelFor(m => m.Model.KPP):
			</td>
			<td>
				@Html.EditorFor(m => m.Model.KPP, new { width = "180" })
				@Html.ValidationMessageFor(m => m.Model.KPP)
			</td>
		</tr>

		<tr>
			<td>
				@Html.LabelFor(m => m.Model.RwID):
			</td>
			<td>
				@Html.EditorFor(m => m.Model.RwID, new { width = "350" })
				@Html.ValidationMessageFor(m => m.Model.RwID)
			</td>
		</tr>

		<tr>
			<td>
				@Html.LabelFor(m => m.Model.AddressLegal) <small>(<span data-bind="html: Territory.@(territoryName)"></span>)</small>:
			</td>
			<td>
				@Html.EditorFor(m => m.Model.AddressLegal)
				@Html.ValidationMessageFor(m => m.Model.AddressLegal)
			</td>
		</tr>

		<tr>
			<td>
				@Html.LabelFor(m => m.Model.AddressLegalLat):
				<br />&nbsp;
			</td>
			<td>@Html.EditorFor(m => m.Model.AddressLegalLat, new { Databinding = "latinOnly: true" })
				<small>@(Resources.Views_JuridicalPerson_Requisites_AddressLegalLat)<span data-bind="html: Territory.Caption"></span></small>
				@Html.ValidationMessageFor(m => m.Model.AddressLegalLat)
			</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr valign="top" >
			<td>
				@Html.LabelFor(m => m.Model.ShortNameRusGenitive) <small>(<span data-bind="html: Territory.@(territoryName)"></span>)</small>:<br />
				<center><small>@(Resources.Persons_Requisites_ShortNameRusGenitive_AddOn)</small></center>
			</td>
			<td >
				@Html.EditorFor(m => m.Model.ShortNameRusGenitive)
				@Html.ValidationMessageFor(m => m.Model.ShortNameRusGenitive)
			</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>

		</table>
 }

</div>

@section Header {
	<div id="toolBar" class="ui-widget-header ui-corner-all kui-toolbar"
		style="padding: 2px;"
		data-bind="visible: PageLoaded">
		<table cellspacing="0" cellpadding="0" border="0" style="margin-top: -2px;" width="100%">
		<tr valign="middle">
			<td >&nbsp;
				<button type="button" data-bind=" 
						click: function() { ViewModel.save(); $('#SubmitButton').click(); },
						jqueryui: { widget: 'button', options: { icons: { primary: 'ui-icon-check' } } }
					">@(Model.Model.ID == 0 ? global::Resources.Resources.GUI_Button_Confirm : global::Resources.Resources.GUI_Button_Save)</button>
				<button type="button" data-bind="
						click: Delete,
						jqueryui: { widget: 'button', options: { disabled: !ViewModel.Model.ID() || ViewModel.CardsNumber()<=1, icons: { primary: 'ui-icon-trash' } } }
					">@(global::Resources.Resources.GUI_Button_Delete)</button>
				<button type="button" data-bind=" 
						click: closeDialog, 
						jqueryui: { widget: 'button', options: { icons: { primary: 'ui-icon-cancel' } } }
					">@(global::Resources.Resources.GUI_Button_Cancel)</button>
			</td>
			<td nowrap="nowrap" style="width: 30px;">
				<button type="button" style="display: none;"
						data-bind="jqueryui: { widget: 'button', options: { text: false, icons: { primary: 'ui-icon-help' }}}, click: showHelp"
					>@(Kesco.Web.Mvc.UI.Controls.Localization.Resources.GUI_Menu_Help)</button>
			</td>
                 </tr>
		</table>
	</div>
}

@section Footer {
@Html.CommonScriptCode("Requisites_Footer",
@<script>
	$(document).ready(function () {
		@* Задаем селектор для установки фокуса на соответствующий элемент ввода после загрузки всех свойств страницы *@
		ViewModel.ControlNameToFocus='#Model_ShortNameRus';

        ViewModel.prevVersionUrl = "";

		window.ViewModel.TerritoryIsRussia = window.ko.computed(function () {
			return window.ViewModel.Model.TerritoryID() == @(Kesco.Territories.ObjectModel.Territory.Russia);
		}, window.ViewModel);

		window.ViewModel.NamesAreRequired = window.ko.computed(function () {
			return !window.ViewModel.Model.ShortNameRus() && !window.ViewModel.Model.ShortNameLat();
		}, window.ViewModel);


		$("#Model_ShortNameRus, #Model_ShortNameLat").bind("keydown change", function() {
			setNamesRequired()
		})

		function setNamesRequired() {
			var rus = $("#Model_ShortNameRus"), lat = $("#Model_ShortNameLat");
			var value = rus.val() || lat.val();
			if (value) {
				rus.parent().removeClass("ui-state-highlight");
				lat.parent().removeClass("ui-state-highlight");
			} else {
				rus.parent().addClass("ui-state-highlight");
				lat.parent().addClass("ui-state-highlight");
			}
		}

		@* автоматическое формирование наименований при изменении организационно-правовой формы *@
		var prevOpForma = '', prevOpFormaShort = '';
		window.ViewModel.Model.IncorporationFormID.subscribe(function(newValue) {
			var opValue = "";
			var opValueShort = "";

			@* Найдем совпадения *@
			var matches = $.grep(
				window.ViewModel.Model_IncorporationFormID__Options,
				function(item, i) {
					return item.ID == newValue;
				});

			if (matches.length > 0) {
				opValue = matches[0].Name;
				opValueShort = matches[0].ShortName;
			}

			var fullName = "";
			var shortNameRus = '"..."';

			if (window.ViewModel.Model.FullName())
				fullName = window.ViewModel.Model.FullName().toString();

			if (window.ViewModel.Model.ShortNameRus())
				shortNameRus = window.ViewModel.Model.ShortNameRus().toString();

			var clearFullName = ""+fullName;
			if (prevOpForma) clearFullName = clearFullName.replace(prevOpForma + " ", "");
			var clearShortNameRus = ""+shortNameRus;
			if (prevOpFormaShort) clearShortNameRus = clearShortNameRus.replace(prevOpFormaShort + " ", "");

			prevOpForma = opValue;
			prevOpFormaShort = opValueShort;

			window.ViewModel.Model.FullName((opValue?(opValue + " "):"") + clearFullName);
			window.ViewModel.Model.ShortNameRus((opValueShort?(opValueShort+" "):"") + clearShortNameRus);
		});

		function checkLatSymbols(value) {
			if (!$.trim(value || "")) return false;
			var pattern = /^[\x00-\x7F]+$/;
			return pattern.test(value);
		}


		$("#editForm").submit(function () {
			// this - DOM element - form
			var $form = $(this);

			if ($form.valid()) {

				window.ViewModel.save();
			}

			return false;
		});

		window.ViewModel.save = function () {
			var $form = $("#editForm");
			if (!$form.valid()) return;
			$.ajax({
				url: '@(Url.Action("Dispatch"))',
				type: 'POST',
				data: window.ko.toJSON({
					command: 'save',
					control: ViewModel.Confirmed()?"confirmed":null,
					model:  window.ko.mapping.toJS(window.ViewModel.Model)
				}),
				contentType: "application/json; charset=utf-8",
				success: function (result, status, xhr) {
				},
				error: function (xhr, status, errorThrown) {
				},
				complete: function() {
				}
			});
		};

		ViewModel.Delete = function () {
			if(ViewModel.Model.ID()==0) return;
			confirmAction('@(global::Resources.Resources.Persons_Delete_Confirm_Title)', '@Html.Raw(global::Resources.Resources.Persons_Card_Delete_Confirm_Text)', '@(global::Resources.Resources.GUI_Button_Confirm)', function(){ 
					$.ajax({
						url: '@(Url.Action("Delete"))',
						type: 'POST',
						data: window.ko.toJSON({
							model: ko.mapping.toJS(ViewModel.Model)
						}),
						contentType: "application/json; charset=utf-8",
						complete: function() {
						}
					});
				}, '@(global::Resources.Resources.GUI_Button_Cancel)', null, null);
		};

		$(window).resize(function () {
			$("#formContainer").height($("#dialogContentPane").height());
			$("#formContainer").width($("#dialogContentPane").width());
		});

		setTimeout(function() { $(window).resize(); }, 100);
	});
</script>)

@Html.DisplayFor(m => m.Model, "ChangedByInfo")
}
