#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 7 "..\..\Views\Contact\Index.cshtml"
    using Kesco.Persons.Web;
    
    #line default
    #line hidden
    
    #line 8 "..\..\Views\Contact\Index.cshtml"
    using Kesco.Persons.Web.Models;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Contact\Index.cshtml"
    using Kesco.Web.Mvc;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Views\Contact\Index.cshtml"
    using Kesco.Web.Mvc.SharedViews;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Views\Contact\Index.cshtml"
    using Kesco.Web.Mvc.UI;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Views\Contact\Index.cshtml"
    using Kesco.Web.Mvc.UI.Controls;
    
    #line default
    #line hidden
    using MvcJqGrid;
    
    #line 2 "..\..\Views\Contact\Index.cshtml"
    using Resources;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Contact/Index.cshtml")]
    public partial class _Views_Contact_Index_cshtml : Kesco.Persons.Web.SiteViewPage<Kesco.Persons.Web.Models.Contact.ViewModel>
    {
        public _Views_Contact_Index_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n\r\n\r\n\r\n");

            
            #line 13 "..\..\Views\Contact\Index.cshtml"
  
	Model
		.GetScriptCapabilities()
			.DisableGridScript()
			.DisableTreeScript();
	ViewBag.Title = Resources.Kesco_Persons_Web_VW_2000;
	Layout = "~/Views/Shared/_Layout.cshtml";
    /* Ищем в URL параметр hideOldVer, пишем его в сессию. Требуется для скрытия кнопки "Открыть в старой версии"  */
    string hideOldVerRequest = HttpContext.Current.Request["hideOldVer"];
    var hideOldVerSession = HttpContext.Current.Session["hideOldVer"];
    string hideOldVer = "false";

    if (!String.IsNullOrEmpty(hideOldVerRequest))
    {
        HttpContext.Current.Session["hideOldVer"] = hideOldVer = hideOldVerRequest;
    }
    else if (hideOldVerSession != null)
    {
        hideOldVer = hideOldVerSession.ToString();
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" id=\"dialogContentPaneContainer\"");

WriteLiteral(" style=\"overflow: auto;\"");

WriteLiteral(">\r\n");

            
            #line 36 "..\..\Views\Contact\Index.cshtml"
Write(Html.CommonScriptCode("Contact_Init",
item => new System.Web.WebPages.HelperResult(__razor_template_writer => {

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "<script>\r\n\t\tfunction setContactTextCaption() {\r\n\t\t\tvar caption = \"Contact Text\";\r" +
"\n\t\t\tvar contactType = parseInt(window.ViewModel.Model.Contact.ContactTypeID());\r" +
"\n\t\t\tswitch(contactType) {\r\n\t\t\t\tcase 40: caption = \'");

            
            #line 42 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Kesco.Persons.Web.Localization.Resources.Views_Contact_ContactText_Email);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\'; break;\r\n\t\t\t\tcase 41: caption = \'");

            
            #line 43 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Kesco.Persons.Web.Localization.Resources.Views_Contact_ContactText_YahooIM);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\'; break;\r\n\t\t\t\tcase 50: caption = \'");

            
            #line 44 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Kesco.Persons.Web.Localization.Resources.Views_Contact_ContactText_Http);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\'; break;\r\n\t\t\t\tcase 51: caption = \'");

            
            #line 45 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Kesco.Persons.Web.Localization.Resources.Views_Contact_ContactText_Telex);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\'; break;\r\n\t\t\t\tcase 52: caption = \'");

            
            #line 46 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Kesco.Persons.Web.Localization.Resources.Views_Contact_ContactText_Teletype);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\'; break;\r\n\t\t\t\tcase 53: caption = \'");

            
            #line 47 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Kesco.Persons.Web.Localization.Resources.Views_Contact_ContactText_Pager);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, @"'; break;
			}
			$(""#Model_Contact_ContactText"").text(caption).attr({
					title: caption,
					alt: caption
				});
		}
		
		// http://titan.kescom.com/persons/contact.aspx?id=0&personContactCategor=3&personContactType=30&personContactText=2214&PersonsListContact=58846,19602&docview=yes

		");

WriteLiteralTo(__razor_template_writer, "\r\n\t\t(function(window, undefined) {\r\n\r\n\t\t\tvar url = \"");

            
            #line 60 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Kesco.Persons.Web.Configuration.AppSettings.URI_person_search_old);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\";\r\n\t\t\tvar value = url.substring(0, url.lastIndexOf(\'/\') + 1);\r\n\r\n\t\t\tViewModel.pr" +
"evVersionUrl = value + \"contact.aspx?id=");

            
            #line 63 "..\..\Views\Contact\Index.cshtml"
                        WriteTo(__razor_template_writer, Html.Raw(Model.Model.Contact.ID + Request.Url.Query.Replace("?", "&")));

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, @""";

			ViewModel.ContactIsAddressBased = ko.computed(function () {
				var contactType = parseInt(window.ViewModel.Model.Contact.ContactTypeID());
				return !isNaN(contactType) && contactType < 20;
			}, ViewModel);

			ViewModel.ContactIsTelephoneBased = ko.computed(function () {
				var contactType = parseInt(window.ViewModel.Model.Contact.ContactTypeID());
				return !isNaN(contactType) && contactType >= 20 && contactType < 40;
			}, ViewModel);

			ViewModel.ContactIsContactText = ko.computed(function () {
				var contactType = parseInt(window.ViewModel.Model.Contact.ContactTypeID());
				return !isNaN(contactType) && contactType >= 40 && contactType < 54;
			}, ViewModel);

			ViewModel.ContactIsOther = ko.computed(function () {
				var contactType = parseInt(window.ViewModel.Model.Contact.ContactTypeID());
				return !isNaN(contactType) && contactType == 54;
			}, ViewModel);

			ViewModel.Save = function () {
				var $form = $(""#ContactForm"");
				//if (!$form.valid()) return;
				$.ajax({
					url: '");

            
            #line 89 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Url.Action("Save"));

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\',\r\n\t\t\t\t\ttype: \'POST\',\r\n\t\t\t\t\tdata: window.ko.toJSON({\r\n\t\t\t\t\t\tdocview: \'");

            
            #line 92 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, (Request["docview"] != null)?Request["docview"]:"");

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, @"',
						control: null,
						model: ko.mapping.toJS(ViewModel.Model)
					}),
					contentType: ""application/json; charset=utf-8"",
					complete: function() {
					    
					}
				});
			};

			ViewModel.Delete = function () {
				if(ViewModel.Model.Contact.ID()==0) return;
				confirmAction('");

            
            #line 105 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Resources.Persons_Delete_Confirm_Title);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\', \'");

            
            #line 105 "..\..\Views\Contact\Index.cshtml"
                              WriteTo(__razor_template_writer, Html.Raw(Resources.Persons_Contact_Delete_Confirm_Text));

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\', \'");

            
            #line 105 "..\..\Views\Contact\Index.cshtml"
                                                                                          WriteTo(__razor_template_writer, Resources.GUI_Button_Confirm);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\', function(){ \r\n\t\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\t\turl: \'");

            
            #line 107 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Url.Action("Delete"));

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, "\',\r\n\t\t\t\t\t\t\ttype: \'POST\',\r\n\t\t\t\t\t\t\tdata: window.ko.toJSON({\r\n\t\t\t\t\t\t\t\tmodel: ko.mapp" +
"ing.toJS(ViewModel.Model)\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tcontentType: \"application/json; ch" +
"arset=utf-8\",\r\n\t\t\t\t\t\t\tcomplete: function() {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, \'");

            
            #line 116 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Resources.GUI_Button_Cancel);

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, @"', null, null);
			};
		})(this);

		function contactTypeChanged() {
			setContactTextCaption();
			updateContactText();
		    setCountryFildEmpty();
		}

		function adjustPhone() {
			//ViewModel.Model.AreaID(null);
			ViewModel.dispatchModelCommand('AdjustPhone');
		}

		function updateContactText() {
			ViewModel.dispatchModelCommand('UpdateContactText');
		}

		function setCountryFildEmpty() {
             var countryField = document.getElementById('Model_Contact_CountryID___Autocomplete');
            if(countryField == null) return;
                countryField.onfocusout = function() {
                    if(countryField.value == null || countryField.value == """") {
                        ViewModel.Model.Contact.CountryID('');
                    }
                };
        }
      

       function setMaskedFieldsCLickAction(fieldName) {
        var field = document.getElementById(fieldName);
        if(field != null && field != """" && field != undefined) {
            field.onclick = function () {
                setTimeout(function () {
                    if(field.value[0] == ' ') {
                        field.select();
                    }
                }, 450);
            }
        }
    }

        $(document).ready(function () {

            
           
            ");

WriteLiteralTo(__razor_template_writer, "\r\n            setMaskedFieldsCLickAction(\'Model_Contact_CityPhoneCode\');\r\n\r\n\r\n\t\t " +
"   \t\t\t");

WriteLiteralTo(__razor_template_writer, @"
			//ViewModel.Model.Contact.ContactTypeID.subscribe(updateContactText);
			$(""#Model_Contact_ContactTypeID"")
				.change(function() {
					contactTypeChanged();
				});
			setContactTextCaption();

			ViewModel.Model.Contact.Zip.subscribe(updateContactText);
			ViewModel.Model.Contact.CountryID.subscribe(updateContactText);
			ViewModel.Model.Contact.Region.subscribe(updateContactText);
			ViewModel.Model.Contact.CityName.subscribe(updateContactText);
			ViewModel.Model.Contact.CityNameRus.subscribe(updateContactText);
			ViewModel.Model.Contact.Address.subscribe(updateContactText);
			ViewModel.Model.Contact.PersonID.subscribe(function(newValue) {
				$.ajax({ 
						url: '");

            
            #line 183 "..\..\Views\Contact\Index.cshtml"
WriteTo(__razor_template_writer, Url.Action("GetPersonAccessLevel"));

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, @"',
						data: { personID: newValue }
					});
			});
			
			$(""#Model_Contact_CountryPhoneCode, #Model_Contact_CityPhoneCode, #Model_Contact_PhoneNumber"")
				.change(function() {
					setTimeout(function() { adjustPhone(); }, 300);
				});
			//ViewModel.Model.Contact.CountryPhoneCode.subscribe(updateContactText);
			//ViewModel.Model.Contact.CityPhoneCode.subscribe(updateContactText);
			//ViewModel.Model.Contact.PhoneNumber.subscribe(updateContactText);
			ViewModel.Model.Contact.PhoneNumberAdd.subscribe(updateContactText);

			ViewModel.Model.Contact.OtherContact.subscribe(updateContactText);

			$(window).resize(function () {
				$(""#dialogContentPaneContainer"").height($(""#dialogContentPane"").height());
				$(""#dialogContentPaneContainer"").width($(""#dialogContentPane"").width());
			});

			$(""#ContactForm"").submit(function () {
				// this - DOM element - form
				var $form = $(this);
				if ($form.valid()) {
					window.ViewModel.Save();
				}
				return false;
			});
             ");

WriteLiteralTo(__razor_template_writer, "\r\n            setCountryFildEmpty();\r\n\t\t});\r\n</script>");

            
            #line 215 "..\..\Views\Contact\Index.cshtml"
       })));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 216 "..\..\Views\Contact\Index.cshtml"
   Html.EnableClientValidation(); 
            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 218 "..\..\Views\Contact\Index.cshtml"
 using (Html.BeginForm("Save", "Contact", FormMethod.Post, new { id = "ContactForm", name = "ContactForm", onsubmit = "return false;" }))
{
	
            
            #line default
            #line hidden
            
            #line 220 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationSummary(true));

            
            #line default
            #line hidden
            
            #line 220 "..\..\Views\Contact\Index.cshtml"
                              

	
            
            #line default
            #line hidden
            
            #line 222 "..\..\Views\Contact\Index.cshtml"
Write(Html.HiddenFor(m => m.Model.Contact.ID));

            
            #line default
            #line hidden
            
            #line 222 "..\..\Views\Contact\Index.cshtml"
                                         

            
            #line default
            #line hidden
WriteLiteral("\t<br />\r\n");

WriteLiteral("\t<div");

WriteLiteral(" data-bind=\"visible: !Model.Contact.PersonID()\"");

WriteLiteral(" style=\"color: Red;\"");

WriteLiteral("><small>");

            
            #line 224 "..\..\Views\Contact\Index.cshtml"
                                                                            Write(Kesco.Persons.Web.Localization.Resources.Persons_Contact_PleaseSpecifyPerson);

            
            #line default
            #line hidden
WriteLiteral("</small></div>\r\n");

WriteLiteral("\t<table");

WriteLiteral(" class=\"formTable\"");

WriteLiteral(" cellspacing=\"0\"");

WriteLiteral(" cellpadding=\"4\"");

WriteLiteral(" border=\"0\"");

WriteLiteral(" style=\"min-width: 600px;\"");

WriteLiteral(">\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 229 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelFor(m => m.Model.Contact.PersonID, new { @for = "Model_Contact_PersonID___Autocomplete" }));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 234 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.PersonID));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 235 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.PersonID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"border-top: 1px solid;\"");

WriteLiteral("></td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 245 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.ContactTypeID));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 250 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.ContactTypeID, new { EnableExpr = "AccessLevel()>=2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 251 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.ContactTypeID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" data-bind=\"visible: ViewModel.LinksCount()>0\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"border-top: 1px solid;\"");

WriteLiteral("></td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" data-bind=\"visible: ViewModel.LinksCount()>0\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 261 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelFor(m => m.Model.Contact.PersonLinkID
					,(Model.Model.Person == null || Model.Model.Person.PersonType == Kesco.Persons.ObjectModel.PersonCardType.Juridical)
						? Kesco.Persons.Web.Localization.Resources.Views_Contact_PersonLinkID_Label_ByEmployee
							: Kesco.Persons.Web.Localization.Resources.Views_Contact_PersonLinkID_Label_ByWorkPlace
					, new { id = "Model_Contact_PersonLinkID_Label",
							alt = (Model.Model.Person == null || Model.Model.Person.PersonType == Kesco.Persons.ObjectModel.PersonCardType.Juridical)
								? Kesco.Persons.Web.Localization.Resources.Views_Contact_PersonLinkID_Label_ByEmployee
								: Kesco.Persons.Web.Localization.Resources.Views_Contact_PersonLinkID_Label_ByWorkPlace,
							title = (Model.Model.Person == null || Model.Model.Person.PersonType == Kesco.Persons.ObjectModel.PersonCardType.Juridical)
								? Kesco.Persons.Web.Localization.Resources.Views_Contact_PersonLinkID_Label_ByEmployee
								: Kesco.Persons.Web.Localization.Resources.Views_Contact_PersonLinkID_Label_ByWorkPlace,
							@for = "Model_Contact_PersonLinkID___Autocomplete"
					}
				));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 279 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.PersonLinkID,
						new { HtmlAttributes = new { data_bind = "selectBoxEnabled: AccessLevel()>=2" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 281 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.PersonLinkID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" data-bind=\"visible: ContactIsAddressBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"border-top: 1px solid;\"");

WriteLiteral("></td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" data-bind=\"visible: ContactIsAddressBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 291 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.Zip));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 296 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.Zip, new { Databinding = "enable: AccessLevel() >= 2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 297 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.Zip));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" data-bind=\"visible: ContactIsAddressBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 304 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelFor(m => m.Model.Contact.CountryID, new { @for = "Model_Contact_CountryID___Autocomplete" }));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 309 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.CountryID,
						new { HtmlAttributes = new { data_bind = "selectBoxEnabled: AccessLevel()>=2" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 311 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.CountryID));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" data-bind=\"visible: ContactIsAddressBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 318 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.Region));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 323 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.Region, new { Databinding = "enable: AccessLevel() >= 2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 324 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.Region));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" data-bind=\"visible: ContactIsAddressBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 331 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.CityName));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 336 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.CityName, new { Databinding = "enable: AccessLevel() >= 2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 337 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.CityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" data-bind=\"visible: ContactIsAddressBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 344 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.Address));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 349 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.Address, new { Databinding = "enable: AccessLevel() >= 2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 350 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.Address));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\r\n\t<tr");

WriteLiteral(" data-bind=\"visible: ContactIsTelephoneBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"border-bottom: 1px solid; height: 2px;\"");

WriteLiteral("></td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" data-bind=\"visible: ContactIsTelephoneBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 361 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.CountryPhoneCode));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 366 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.CountryPhoneCode, new { Databinding = "enable: AccessLevel() >= 2", width = 80, maskOptions = "mask: '99999999', placeholder: ''"  }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t<a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" onclick=\"setTimeout(function(){ViewModel.dispatchModelCommand(\'ChooseCountryPhon" +
"eCode\',\'Model_Contact_CountryPhoneCode\')},200);\"");

WriteLiteral(" data-bind=\"visible: ViewModel.AccessLevel()\"");

WriteLiteral(">...</a>\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" data-bind=\"visible: ContactIsTelephoneBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 374 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.CityPhoneCode));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 379 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.CityPhoneCode, new { Databinding = "enable: AccessLevel() >= 2", width = 80, maskOptions = "mask: '99999999', placeholder: ' '" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t<a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" onclick=\"setTimeout(function(){ViewModel.dispatchModelCommand(\'ChooseCityPhoneCo" +
"de\', \'Model_Contact_CityPhoneCode\')},200);\"");

WriteLiteral(" data-bind=\"visible: ViewModel.AccessLevel()\"");

WriteLiteral(">...</a>\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" data-bind=\"visible: ContactIsTelephoneBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 387 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.PhoneNumber));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 392 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.PhoneNumber, new { width = "150", Databinding = "enable: AccessLevel() >= 2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 393 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.PhoneNumberAdd));

            
            #line default
            #line hidden
WriteLiteral(":\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 394 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.PhoneNumberAdd, new { width = "50", Databinding = "enable: AccessLevel() >= 2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" data-bind=\"visible: ContactIsTelephoneBased\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">&nbsp;</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(" data-bind=\"html: Model.Direction\"");

WriteLiteral(">\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\r\n\t<tr");

WriteLiteral(" data-bind=\"visible: ContactIsContactText()\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"border-top: 1px solid;\"");

WriteLiteral("></td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" data-bind=\"visible: ContactIsContactText()\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 412 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelFor(m => m.Model.Contact.ContactText,
						new { id = "Model_Contact_ContactText" }));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 418 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.ContactText, new { Databinding = "enable: AccessLevel() >= 2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 419 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.ContactText));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\r\n\t<tr");

WriteLiteral(" data-bind=\"visible: ContactIsOther\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"border-top: 1px solid;\"");

WriteLiteral("></td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" data-bind=\"visible: ContactIsOther\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 430 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.OtherContact));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 435 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.OtherContact, new { Databinding = "enable: AccessLevel() >= 2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 436 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.OtherContact));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\r\n\t<tr>\r\n\t\t<td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"border-top: 1px solid;\"");

WriteLiteral("></td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 447 "..\..\Views\Contact\Index.cshtml"
Write(Html.LabelForEx(m => m.Model.Contact.Comment));

            
            #line default
            #line hidden
WriteLiteral(":\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-field\"");

WriteLiteral(">\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 452 "..\..\Views\Contact\Index.cshtml"
Write(Html.EditorFor(m => m.Model.Contact.Comment, new { Databinding = "enable: AccessLevel() >= 2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("\t\t\t\t");

            
            #line 453 "..\..\Views\Contact\Index.cshtml"
Write(Html.ValidationMessageFor(m => m.Model.Contact.Comment));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"border-top: 1px solid;\"");

WriteLiteral("></td>\r\n\t</tr>\r\n\t<tr");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n\t\t<td");

WriteLiteral(" style=\"width: 150px; padding-top: 4px;\"");

WriteLiteral(">\r\n\t\t\t<div");

WriteLiteral(" class=\"editor-label\"");

WriteLiteral(">&nbsp;</div>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<div");

WriteLiteral(" style=\"float:left;\"");

WriteLiteral(" data-bind=\"text: Model.Contact.PhoneNumberCorporative()+\' (\', visible: Model.Con" +
"tact.PhoneNumberCorporative\"");

WriteLiteral("></div>\r\n\t\t\t<div");

WriteLiteral(" style=\"float:left;\"");

WriteLiteral(" data-bind=\"text: Model.Contact.ContactText\"");

WriteLiteral("></div>\r\n\t\t\t<div");

WriteLiteral(" style=\"float:left;\"");

WriteLiteral(" data-bind=\"visible: Model.Contact.PhoneNumberCorporative\"");

WriteLiteral(">)</div>\r\n\t\t\t<div");

WriteLiteral(" style=\"clear:both\"");

WriteLiteral(" />\r\n\t\t</td>\r\n\t</tr>\r\n\t</table>\r\n");

            
            #line 472 "..\..\Views\Contact\Index.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n\r\n\r\n");

DefineSection("Header", () => {

WriteLiteral("\r\n<div");

WriteLiteral(" id=\"toolBar\"");

WriteLiteral(" class=\"ui-widget-header ui-corner-all kui-toolbar\"");

WriteLiteral(" style=\"padding: 2px;\"");

WriteLiteral(" data-bind=\"visible: PageLoaded\"");

WriteLiteral(">\r\n\t<table");

WriteLiteral(" cellspacing=\"0\"");

WriteLiteral(" cellpadding=\"0\"");

WriteLiteral(" border=\"0\"");

WriteLiteral(" style=\"margin-top: -2px;\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(">\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t\t<button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" data-bind=\"\r\n\t\t\t\t\t\tclick: function() { ViewModel.Save(); $(\'#SubmitButton\').clic" +
"k(); },\r\n\t\t\t\t\t\tjqueryui: { widget: \'button\', options: { disabled: Processing() |" +
"| AccessLevel() < 2, icons: { primary: \'ui-icon-check\' } } }\r\n\t\t\t\t\t\"");

WriteLiteral(">");

            
            #line 484 "..\..\Views\Contact\Index.cshtml"
  Write(Resources.GUI_Button_Save);

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n\t\t\t\t<button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" data-bind=\"\r\n\t\t\t\t\t\tclick: Delete,\r\n\t\t\t\t\t\tjqueryui: { widget: \'button\', options: " +
"{ disabled: Processing() || !Model.Contact.ID() || AccessLevel() < 2, icons: { p" +
"rimary: \'ui-icon-trash\' } } }\r\n\t\t\t\t\t\"");

WriteLiteral(">");

            
            #line 488 "..\..\Views\Contact\Index.cshtml"
  Write(Resources.GUI_Button_Delete);

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n\t\t\t\t<button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" data-bind=\"\r\n\t\t\t\t\t\tclick: closeDialog,\r\n\t\t\t\t\t\tjqueryui: { widget: \'button\', opti" +
"ons: { disabled: Processing(), icons: { primary: \'ui-icon-cancel\' } } }\r\n\t\t\t\t\t\"");

WriteLiteral(">");

            
            #line 492 "..\..\Views\Contact\Index.cshtml"
  Write(Resources.GUI_Button_Cancel);

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n\t\t\t</td>\r\n\t\t\t<td");

WriteLiteral(" nowrap=\"nowrap\"");

WriteLiteral(" style=\"width: 30px;\"");

WriteLiteral(">\r\n\t\t\t\t<button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral("\r\n\t\t\t\t\tdata-bind=\"jqueryui: { widget: \'button\', options: { text: false, icons: { " +
"primary: \'ui-icon-help\' }}}, visible: PageLoaded, click: showHelp\"");

WriteLiteral("\r\n\t\t\t\t\t>");

            
            #line 497 "..\..\Views\Contact\Index.cshtml"
  Write(Kesco.Web.Mvc.UI.Controls.Localization.Resources.GUI_Menu_Help);

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n\t\t\t</td>\r\n            \r\n            \r\n\r\n           \r\n\r\n\t\t\t\r\n\t\t</tr>\r\n\t" +
"</table>\r\n</div>\r\n");

});

WriteLiteral("\r\n");

DefineSection("Footer", () => {

WriteLiteral(" \r\n");

            
            #line 511 "..\..\Views\Contact\Index.cshtml"
Write(Html.CommonScriptCode("Contact_Footer",
item => new System.Web.WebPages.HelperResult(__razor_template_writer => {

            
            #line default
            #line hidden
WriteLiteralTo(__razor_template_writer, @"<script>
     function chooseCountry(x) {
         var _title = '';
         switch (x) {
             case 4: _title = 'Выбор населенного пункта'; break;
             case 2: _title = 'Выбор страны'; break;
         }
         doSrvCmd(""ChooseArea"", x, _title);
     }
</script>");

            
            #line 521 "..\..\Views\Contact\Index.cshtml"
       })));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 522 "..\..\Views\Contact\Index.cshtml"
  
	string parentIDs = String.Empty;
	string childIDs = String.Empty;
	string fieldToShow = "FriendlyName";
	if (Model.Model.Person == null) {
		parentIDs = "";
		fieldToShow = "Child";
	} else {
		if (Model.Model.Person.PersonType == Kesco.Persons.ObjectModel.PersonCardType.Juridical) {
			parentIDs = Model.Model.Person.ID.ToString();
			fieldToShow = "Child";
		} else {
			childIDs = Model.Model.Person.ID.ToString();
			fieldToShow = "Parent";
		}
	}
	Html.RegisterScript(@String.Format(@"
		;(function() {{

			ViewModel.{0}_ParentIDs = ko.observable('{1}');
			ViewModel.{0}_ChildIDs = ko.observable('{2}');
			var $control = $('#{0}');
            
			var onCommand = $control.selectBox('option','command');
			$control.selectBox('option', {{ 
				command: function(event, ui) {{
					ui.item.parameters = $.extend(ui.item.parameters || {{}}, {{
						LinkTypeIDs: '1',
						ParentIDs: ViewModel.{0}_ParentIDs(),
						ChildIDs: ViewModel.{0}_ChildIDs() 
					}});

					onCommand.apply(this, arguments);
				}}
			}});

			window.PersonLink_HandleFormatItem = function (item) {{
				var comment = (item.data.Description) ? item.data.Description : '';
				var s = '';
				s += "" <span style='width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; display:inline-block;'>"" + item.data.{3} + ""</span>"";
				s += "" <span style='overflow: hidden; text-overflow: ellipsis; white-space: nowrap; display:inline-block;'><small><i>"" + comment + ""</i></small></span>"";
				return s;
			}}

			$control.selectBox('option', 'displayField', '{3}');
		}})();
	", "Model_Contact_PersonLinkID", parentIDs, childIDs, fieldToShow));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 570 "..\..\Views\Contact\Index.cshtml"
Write(Html.DisplayFor(m => m.Model.Contact, "ChangedByInfo"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

});

        }
    }
}
#pragma warning restore 1591
