#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 2 "..\..\Views\Shared\EditorTemplates\EmployeeContactSelect.cshtml"
    using Kesco.Web.Mvc;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Shared\EditorTemplates\EmployeeContactSelect.cshtml"
    using Kesco.Web.Mvc.UI;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/EditorTemplates/EmployeeContactSelect.cshtml")]
    public partial class _Views_Shared_EditorTemplates_EmployeeContactSelect_cshtml_ : Kesco.Web.Mvc.SharedViews.SharedViewPage<string>
    {
        public _Views_Shared_EditorTemplates_EmployeeContactSelect_cshtml_()
        {
        }
        public override void Execute()
        {
            
            #line 4 "..\..\Views\Shared\EditorTemplates\EmployeeContactSelect.cshtml"
   
	string id = ViewData.TemplateInfo.GetFullHtmlFieldId("");
	string name = ViewData.TemplateInfo.HtmlFieldPrefix;
	ModelMetadata metadata = ViewData.ModelMetadata;

	string value = Model ?? "";
	string label = Model ?? "";

	// Переданы ли доступные типы контактов
	string contactType = ""; 
	if (metadata.AdditionalValues["EmployeeContactControl.ContactType"] != null) {
		contactType = metadata.AdditionalValues["EmployeeContactControl.ContactType"].ToString();
	}

	// Получить идентификатор скрипта
	string scriptID = "EmployeeContact_HandleFormatItem"; 
	if (metadata.AdditionalValues["EmployeeContactControl.ScriptID"] != null) {
		scriptID = metadata.AdditionalValues["EmployeeContactControl.ScriptID"].ToString();
	}


            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" style=\"width: 300px;\"");

WriteLiteral(">\r\n");

            
            #line 27 "..\..\Views\Shared\EditorTemplates\EmployeeContactSelect.cshtml"
Write(Html.Raw(Html.KescoLookup(name, id).SelfInitialized(false)
	.KeyField("Contact").DisplayField("Contact").Value(value, label)
	.Autocomplete(Url.FullPathAction("LookupEmployeeContact", "Default"), 8)
	.ClientContext(new { @type = contactType })
	.ClientEvents((events) => {
			events.OnCommand = String.Format(@" function (event, ui) {{
					if ($.isFunction(window.dispatchCommand_{0})) dispatchCommand_{0}(ui.item.command);
					else alert('Не установлен обработчик комманд для элемента управления выбора контакта лица ({0})');
				}}", id);
			events.OnRequest = String.Format(@" function (request) {{
					if ($.isFunction(window.handleRequest_{0})) handleRequest_{0}(request);
				}}", id);
			events.OnFormatItem = String.Format(@" function (item) {{
					if ($.isFunction(window.{0})) return {0}(item);
					return item.label;
				}}", scriptID);
		})
	.ShowSearchButton()
	.ShowViewButton(false)
		.HtmlAttributes(ViewBag.HtmlAttributes ?? new { data_bind = "selectBox: "+name })
	.ToString()));

            
            #line default
            #line hidden
WriteLiteral("\r\n</div>\r\n");

            
            #line 49 "..\..\Views\Shared\EditorTemplates\EmployeeContactSelect.cshtml"
  
    if (!String.IsNullOrEmpty(contactType) && contactType != "0") {
        string image = String.Empty;
        string call = String.Empty;
        switch (contactType)
        {
            case "-1": 
                image = WebAssetImage("PhoneStandard.gif");
                call = "ViewModel.makeCall(item.value)";
                break;
            case "-2": 
                image = WebAssetImage("Email.gif");
                call = "ViewModel.sendEmail(item.value)";
                break;
            case "-3": 
                image = WebAssetImage("messenger.gif");
                call = "ViewModel.openMessengerChat(item.value)";
                break;
        }
    
        Html.RegisterScript(String.Format(@"
		    $('#{0}').selectBox('addButton', {{
			    'data-bind': 'enabled: {1}',
			    text: 'Info',
			    image: '{2}',
			    click: function () {{
				    var $this = $(this);
				    var item = $('#{0}').selectBox('getValue');
                    if (item && item.value) {{
                    {3}
                    }}
			    }}
		    }});
        ", id, name, image, call));
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
